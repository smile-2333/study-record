#+TITLE:  MyBatis
#+STARTUP: indent
* guide
SqlSessionFactoryBuilder 最佳作用域是方法作用域
SqlSessionFactory  SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。
SqlSession 实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域
* usage
** xml config
*** properties
*** setting
控制MyBatis的运行行为
*** typeAliases
为类型设置别名，存在的意义仅在于用来减少类完全限定名的冗余
*** typeHandlers
实现 org.apache.ibatis.type.TypeHandler 接口， 或继承一个很便利的类 org.apache.ibatis.type.BaseTypeHandler， 然后可以选择性地将它映射到一个 JDBC 类型
#+BEGIN_SRC java
// ExampleTypeHandler.java
@MappedJdbcTypes(JdbcType.VARCHAR)
public class ExampleTypeHandler extends BaseTypeHandler<String> {

  @Override
  public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType) throws SQLException {
    ps.setString(i, parameter);
  }

  @Override
  public String getNullableResult(ResultSet rs, String columnName) throws SQLException {
    return rs.getString(columnName);
  }

  @Override
  public String getNullableResult(ResultSet rs, int columnIndex) throws SQLException {
    return rs.getString(columnIndex);
  }

  @Override
  public String getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {
    return cs.getString(columnIndex);
  }
}
#+END_SRC
* principle
* refer
https://mybatis.org/mybatis-3/zh/getting-started.html
* spring集成
** springboot
*** 不使用mybatis的配置格式，直接用Spring
1. 配置类上scan *Mapper类
2. application.yml/properties 配置*mapper.xml的路径
#+BEGIN_SRC java
@SpringBootApplication
@MapperScan("cn.hj.qakc.mapper.generate")
public class QakcApplication {

    public static void main(String[] args) {
        SpringApplication.run(QakcApplication.class, args);
    }

    }
#+END_SRC
#+BEGIN_SRC yaml
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/ks?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
mybatis:
  type-aliases-package: cn.hj.qakc.model.entity
  mapper-locations: mybatis/mapper/**/*.xml
#+END_SRC
*** 设置打印日志
#+BEGIN_SRC yaml
logging:
  level:
    cn:
      hj:
        qakc:
          mapper: debug
#+END_SRC
* generator
** gradle
plugins {
    id "com.thinkimi.gradle.MybatisGenerator" version "2.1.2"
}

configurations {
    mybatisGenerator
}

// mac用户可能需要用全路径
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatis/autogen/generatorConfig.xml'

    // optional, here is the override dependencies for the plugin or you can add other database dependencies.
    dependencies {
        mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.7'
        mybatisGenerator 'mysql:mysql-connector-java:5.1.47'
        mybatisGenerator 'org.postgresql:postgresql:42.2.6'
        mybatisGenerator  // Here add your mariadb dependencies or else
    }
}
generatorConfig.xml
#+BEGIN_SRC xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <context id="my" targetRuntime="MyBatis3">

        <!--自动实现Serializable接口-->
<!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>-->

        <!-- 去除自动生成的注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/ks"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!--同样Mac用户：targetProject需要为全路径-->
        <javaModelGenerator targetPackage="cn.hj.qakc.model.entity" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <!--同样Mac用户：targetProject需要为全路径-->
        <sqlMapGenerator targetPackage="mapper.generate" targetProject="src/main/resources/mybatis">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--同样Mac用户：targetProject需要为全路径-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="cn.hj.qakc.mapper.generate" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类 -->
        <table schema="ks" tableName="question"></table>

    </context>
</generatorConfiguration>

#+END_SRC
