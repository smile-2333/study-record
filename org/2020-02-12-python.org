#+TITLE: python
#+STARTUP: indent
* basic
** 编码指定
默认是utf-8,# -*- coding: cp-1252 -*-可以指定
** 注释
*** 单行-#
*** 多行
"""/'''
content
"""/'''
** 缩进表示代码块
** 数据类型
*** Number
**** int
**** bool
***** True
***** False
**** float
***** complex
*** String
*** Tuple
tuple = ( 'abcd', 786 , 2.23, 'runoob', 70.2  )
不可变
*** List
list = [ 'abcd', 786 , 2.23, 'runoob', 70.2 ]
*** Set
student = {'Tom', 'Jim', 'Mary', 'Tom', 'Jack', 'Rose'}
*** Dictionary
#+BEGIN_SRC python
dict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}
dict['Age'] = 8
del dict['Name'] # 删除键 'Name'
dict.clear()     # 清空字典
del dict         # 删除字典

#+END_SRC
** 模块管理
将整个模块(somemodule)导入，格式为： import somemodule
从某个模块中导入某个函数,格式为： from somemodule import somefunction
从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc
将某个模块中的全部函数导入，格式为： from somemodule import *
** 运算符(特有)
*** **
幂
*** //
取整除
*** **=
*** //=
*** :=
海象运算符
*** and
*** or
*** not
*** in
*** not in
*** is
*** is not
** 循环语句
*** while
#+BEGIN_SRC python
while counter <= n:
    sum = sum + counter
    counter += 1
#+END_SRC
*** for
#+BEGIN_SRC python
languages = ["C", "C++", "Perl", "Python"] 
for x in languages:
    print (x)
#+END_SRC
** 频繁用到的函数
*** range
#+BEGIN_SRC python
for i in range(5):
    print(i)
# 0, 1, 2, 3, 4 

for i in range(5,9) :
    print(i)
# 5, 6, 7, 8, 9

for i in range(0, 10, 3) :
    print(i)
    # 第三个参数为步长,0, 3, 6, 9

a = ['Google', 'Baidu', 'Runoob', 'Taobao', 'QQ']
for i in range(len(a)):
    print(i, a[i])
'''
0 Google
1 Baidu
2 Runoob
3 Taobao
4 QQ
'''

list(range(5))


#+END_SRC
*** iter 
**** usage
#+BEGIN_SRC python
list=[1,2,3,4]
it = iter(list)
print (next(it)) # 1
print (next(it)) # 2


list=[1,2,3,4]
it = iter(list)    # 创建迭代器对象
for x in it:
    print (x, end=" ")


while True:
    try:
        print (next(it))
    except StopIteration:
        sys.exit()
#+END_SRC
**** 创建一个迭代器
#+BEGIN_SRC python
class MyNumbers:
  def __iter__(self):
    self.a = 1
    return self
 
  def __next__(self):
    x = self.a
    self.a += 1
    return x
 
myclass = MyNumbers()
myiter = iter(myclass)
 
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))

# 防止无线循环
class MyNumbers:
  def __iter__(self):
    self.a = 1
    return self
 
  def __next__(self):
    if self.a <= 20:
      x = self.a
      self.a += 1
      return x
    else:
      raise StopIteration
 
myclass = MyNumbers()
myiter = iter(myclass)
 
for x in myiter:
  print(x)

#+END_SRC
** 函数
*** 生成器
#+BEGIN_SRC python
import sys
 
def fibonacci(n): # 生成器函数 - 斐波那契
    a, b, counter = 0, 1, 0
    while True:
        if (counter > n): 
            return
        yield a
        a, b = b, a + b
        counter += 1
f = fibonacci(10) # f 是一个迭代器，由生成器返回生成
 
while True:
    try:
        print (next(f), end=" ")
    except StopIteration:
        sys.exit()

#+END_SRC
*** define
#+BEGIN_SRC python
# 计算面积函数
def area(width, height):
    return width * height
 
def print_welcome(name):
    print("Welcome", name)
 
print_welcome("Runoob")
w = 4
h = 5
print("width =", w, " height =", h, " area =", area(w, h))

#+END_SRC
*** lambda
#+BEGIN_SRC python
# 可写函数说明
sum = lambda arg1, arg2: arg1 + arg2
 
# 调用sum函数
print ("相加后的值为 : ", sum( 10, 20 ))
print ("相加后的值为 : ", sum( 20, 20 ))

#+END_SRC
** io
*** 读取
#+BEGIN_SRC python
file = open(fileName,"mode")
file.read([count])

with open(fileName,"mode") as file:
  #doSomething
#+END_SRC
*** json
#+BEGIN_SRC python
import json

json.loads(jsonString) # read from json string
json.dumps(obj) # dump the obj to json string

#+END_SRC
* package manager
** pip
#+BEGIN_SRC python
pip --version

#+END_SRC
